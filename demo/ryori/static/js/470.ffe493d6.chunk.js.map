{"version":3,"file":"static/js/470.ffe493d6.chunk.js","mappings":"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","sources":["components/FooterButtons.tsx","components/QuantitySetter/QuantitySetter.tsx","components/RyoHeader/RyoHeader.tsx","mockData/menuItems.ts","mockData/resto-data.ts","pages/FoodDetails/index.tsx"],"sourcesContent":["import React from \"react\"\r\nimport { Box, Fab } from \"@mui/material\"\r\nimport { Link } from 'react-router-dom';\r\nconst FooterButtons = () => {\r\n    return (\r\n        <div className=\"footerButtons\">\r\n            <Box sx={{ '& > :not(style)': { m: 1 } }}>\r\n                <Link to=\"/summary\">\r\n                    <Fab color=\"secondary\" aria-label=\"add\">\r\n                        +\r\n                    </Fab>\r\n                </Link>\r\n            </Box>\r\n        </div>\r\n    )\r\n}\r\nexport default FooterButtons","import React, { useState } from \"react\"\r\nimport { Box, Button, ButtonGroup, Fab } from \"@mui/material\"\r\nimport { Link } from 'react-router-dom';\r\nimport './quantity-setter.scss';\r\n\r\nconst QuantitySetter = ({qty, itemId, handleEmit}) => {\r\n    \r\n    return (\r\n        <div className=\"quantity-setter block\">\r\n            <span className=\"qty\">{qty}</span>\r\n            <ButtonGroup\r\n                className=\"button-group\"\r\n                disableElevation\r\n                variant=\"contained\"\r\n                aria-label=\"Quantity Control\"\r\n            >\r\n                <Button onClick={() => {\r\n                    handleEmit('-', itemId)\r\n                }}>-</Button>\r\n                <Button onClick={() => {\r\n                    handleEmit('+', itemId)\r\n                }}>+</Button>\r\n            </ButtonGroup>\r\n        </div>\r\n    )\r\n}\r\nexport default QuantitySetter","import React from \"react\"\r\nimport restoData from \"../../mockData/resto-data.ts\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport './ryo-header.scss'\r\nconst RyoHeader = () => {\r\n    const navigate = useNavigate();\r\n    const backHistory = () => {\r\n        navigate(-1)\r\n    }\r\n    console.log('window.location.href', window.location.href)\r\n    console.log('process.env.REACT_APP_URL', process.env.REACT_APP_URL)\r\n    console.log('window.location.href !== process.env.REACT_APP_URL', window.location.href !== process.env.REACT_APP_URL + '/')\r\n    return (\r\n        <div className=\"header block\">\r\n            <img src={restoData.logo} alt={restoData.restaurantName} width={350} />\r\n            {(\r\n                window.location.href !== process.env.REACT_APP_URL + '/' && <a className=\"btn-back\" onClick={backHistory} href=\"#\"></a>\r\n            )}\r\n            \r\n        </div>\r\n    )\r\n}\r\nexport default RyoHeader","import { placeholderURL } from \"./global.ts\";\r\n\r\n\r\nexport default [{\r\n    id: '001',\r\n    label : \"Falafel with salad\",\r\n    calorieCount: 180,\r\n    price : 189.99,\r\n    discount : 15,\r\n    image : process.env.REACT_APP_URL + '/mockAssets/images/food-1.png',\r\n    description: 'Indulge in the savory and rich flavors of Eggs Benedict, featuring a crispy English muffin, salty Canadian bacon or ham, perfectly poached eggs, and a creamy Hollandaise sauce. ',\r\n    contents: 'English muffin, Canadian bacon or ham, Poached eggs, Hollandaise sauce',\r\n    tags: ['Vegan', 'Non-gluten', 'Lactose']\r\n  }, {\r\n    id: '002',\r\n    label : \"Falafel with salad\",\r\n    calorieCount: 180,\r\n    price : 189.99,\r\n    discount : 15,\r\n    image : process.env.REACT_APP_URL + '/mockAssets/images/food-1.png'\r\n  }, {\r\n    id: '003',\r\n    label : \"Falafel with salad\",\r\n    calorieCount: 180,\r\n    price : 189.99,\r\n    discount : 15,\r\n    image : process.env.REACT_APP_URL + '/mockAssets/images/food-1.png'\r\n  }, {\r\n    id: '004',\r\n    label : \"Falafel with salad\",\r\n    calorieCount: 180,\r\n    price : 189.99,\r\n    discount : 15,\r\n    image : process.env.REACT_APP_URL + '/mockAssets/images/food-1.png'\r\n  }]","export default {\r\n    logo: process.env.REACT_APP_URL + '/mockAssets/images/resto-logo.png',\r\n    bg: process.env.REACT_APP_URL + '/mockAssets/images/food-bg.jpeg',\r\n    restaurantName: 'Restaurant | Food & Drinks'\r\n}","import React, { useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '@mui/material/Button';\r\nimport { Context } from '../../global/context.ts';\r\nimport RyoHeader from '../../components/RyoHeader/RyoHeader.tsx';\r\nimport menuItems from '../../mockData/menuItems.ts';\r\nimport QuantitySetter from '../../components/QuantitySetter/QuantitySetter.tsx';\r\nimport './food-details.scss'\r\nimport FooterButtons from '../../components/FooterButtons.tsx';\r\n\r\nconst placeholderURL = \"https://via.placeholder.com/\"\r\nconst data = {\r\n}\r\n\r\nexport default () => {\r\n    const {cart, setCart} = useContext(Context);\r\n    const cartItem = cart.find(cartItem => cartItem.id === menuItems[0].id)\r\n    // TODO : To be refactored\r\n    const emitQuantitySetter = (type, menuItemId) => {\r\n\r\n        const tempCart = [...cart]\r\n        const cartIndex = tempCart.findIndex(cartItem => cartItem.id === menuItemId)\r\n        if(cartIndex >= 0) {\r\n            \r\n            // Edit\r\n            tempCart[cartIndex] = {\r\n                ...tempCart[cartIndex],\r\n                qty : type === '+' ? tempCart[cartIndex].qty + 1 : \r\n                    tempCart[cartIndex].qty === 0 ? 0 :\r\n                    tempCart[cartIndex].qty - 1\r\n            }\r\n\r\n            debugger;\r\n        }\r\n        else {\r\n\r\n            // New\r\n            tempCart.push({\r\n                id : menuItemId,\r\n                qty : 1\r\n            })\r\n            debugger;\r\n        }\r\n\r\n        setCart(tempCart)\r\n    }\r\n  return (\r\n    <>\r\n      <RyoHeader />\r\n      <div className=\"block details\">\r\n        <img src={menuItems[0].image} alt={menuItems[0].label} />\r\n        <h2>{menuItems[0].label}</h2>\r\n        <span className=\"calorie-count\">{menuItems[0].calorieCount} cal</span>\r\n        <p className=\"description\">\r\n            {menuItems[0].description}\r\n        </p>\r\n        <hr />\r\n        <p className=\"contents\">\r\n            {menuItems[0].contents}\r\n        </p>\r\n        <ul className=\"tags\">\r\n            {menuItems[0].tags && menuItems[0].tags.map(tag => \r\n                (<li>{tag}</li>)\r\n            )}\r\n        </ul>\r\n        <span className=\"price\">P{menuItems[0].price}</span>\r\n        <QuantitySetter qty={cartItem?.qty || 0} itemId={menuItems[0]?.id} handleEmit={emitQuantitySetter} />\r\n      </div>\r\n      <FooterButtons />\r\n      \r\n    </>\r\n  );\r\n}\r\n\r\n\r\n"],"names":["_jsx","className","children","Box","sx","m","Link","to","Fab","color","_ref","qty","itemId","handleEmit","_jsxs","ButtonGroup","disableElevation","variant","Button","onClick","navigate","useNavigate","console","log","window","location","href","process","REACT_APP_URL","src","restoData","alt","width","id","label","calorieCount","price","discount","image","description","contents","tags","logo","bg","restaurantName","_menuItems$","_useContext","useContext","Context","cart","setCart","cartItem","find","menuItems","_Fragment","RyoHeader","tag","QuantitySetter","type","menuItemId","tempCart","_toConsumableArray","cartIndex","findIndex","_objectSpread","push","FooterButtons"],"sourceRoot":""}